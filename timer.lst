

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Jun 15 19:27:38 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	maintext,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	text20,local,class=CODE,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text21,local,class=CODE,delta=2
    12                           	psect	pa_nodes,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  000A                     	;#
    15                           
    16                           	psect	config
    17  2007  3F7A               	dw	16250	;#
    18                           
    19                           	psect	maintext
    20  000F                     __pmaintext:	
    21  0001                     _TMR0	set	1
    22  005F                     _GIE	set	95
    23  005E                     _PEIE	set	94
    24  0030                     _RB0	set	48
    25  005D                     _TMR0IE	set	93
    26  005A                     _TMR0IF	set	90
    27  0081                     _OPTION_REG	set	129
    28  0086                     _TRISB	set	134
    29                           
    30                           ; 0 bytes @ 0x2
    31 ;;Data sizes: Strings 0, constant 0, data 0, bss 1, persistent 0 stack 0
    32 ;;Auto spaces:   Size  Autos    Used
    33 ;; COMMON          14      2       3
    34 ;; BANK0           80      0       0
    35 ;; BANK1           80      0       0
    36 ;; BANK3           96      0       0
    37 ;; BANK2           96      0       0
    38 ;;
    39 ;; Pointer list with targets:
    40 ;;
    41 ;; Critical Paths under _main in COMMON
    42 ;;
    43 ;;   None.
    44 ;;
    45 ;; Critical Paths under _timer in COMMON
    46 ;;
    47 ;;   None.
    48 ;;
    49 ;; Critical Paths under _main in BANK0
    50 ;;
    51 ;;   None.
    52 ;;
    53 ;; Critical Paths under _timer in BANK0
    54 ;;
    55 ;;   None.
    56 ;;
    57 ;; Critical Paths under _main in BANK1
    58 ;;
    59 ;;   None.
    60 ;;
    61 ;; Critical Paths under _timer in BANK1
    62 ;;
    63 ;;   None.
    64 ;;
    65 ;; Critical Paths under _main in BANK3
    66 ;;
    67 ;;   None.
    68 ;;
    69 ;; Critical Paths under _timer in BANK3
    70 ;;
    71 ;;   None.
    72 ;;
    73 ;; Critical Paths under _main in BANK2
    74 ;;
    75 ;;   None.
    76 ;;
    77 ;; Critical Paths under _timer in BANK2
    78 ;;
    79 ;;   None.
    80 ;;
    81 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    82 ;;
    83 ;;
    84 ;;Call Graph Tables:
    85 ;;
    86 ;; ---------------------------------------------------------------------------------
    87 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
    88 ;; ---------------------------------------------------------------------------------
    89 ;; (0) _main                                                 0     0      0       0
    90 ;; ---------------------------------------------------------------------------------
    91 ;; Estimated maximum stack depth 0
    92 ;; ---------------------------------------------------------------------------------
    93 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
    94 ;; ---------------------------------------------------------------------------------
    95 ;; (1) _timer                                                2     2      0       0
    96 ;;                                              0 COMMON     2     2      0
    97 ;; ---------------------------------------------------------------------------------
    98 ;; Estimated maximum stack depth 1
    99 ;; ---------------------------------------------------------------------------------
   100 ;; Call Graph Graphs:
   101 ;; _main (ROOT)
   102 ;;
   103 ;; _timer (ROOT)
   104 ;;
   105 ;; Address spaces:
   106 ;;Name               Size   Autos  Total    Cost      Usage
   107 ;;BITCOMMON            E      0       0       0        0.0%
   108 ;;EEDATA             100      0       0       0        0.0%
   109 ;;NULL                 0      0       0       0        0.0%
   110 ;;CODE                 0      0       0       0        0.0%
   111 ;;COMMON               E      2       3       1       21.4%
   112 ;;BITSFR0              0      0       0       1        0.0%
   113 ;;SFR0                 0      0       0       1        0.0%
   114 ;;BITSFR1              0      0       0       2        0.0%
   115 ;;SFR1                 0      0       0       2        0.0%
   116 ;;STACK                0      0       0       2        0.0%
   117 ;;ABS                  0      0       3       3        0.0%
   118 ;;BITBANK0            50      0       0       4        0.0%
   119 ;;BITSFR3              0      0       0       4        0.0%
   120 ;;SFR3                 0      0       0       4        0.0%
   121 ;;BANK0               50      0       0       5        0.0%
   122 ;;BITSFR2              0      0       0       5        0.0%
   123 ;;SFR2                 0      0       0       5        0.0%
   124 ;;BITBANK1            50      0       0       6        0.0%
   125 ;;BANK1               50      0       0       7        0.0%
   126 ;;BITBANK3            60      0       0       8        0.0%
   127 ;;BANK3               60      0       0       9        0.0%
   128 ;;BITBANK2            60      0       0      10        0.0%
   129 ;;BANK2               60      0       0      11        0.0%
   130 ;;DATA                 0      0       3      12        0.0%
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 17 in file "D:\pic_youtube_tutorials\timer.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;		None               void
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0
   142 ;; Tracked objects:
   143 ;;		On entry : 17F/0
   144 ;;		On exit  : 15F/0
   145 ;;		Unchanged: FFE80/0
   146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   147 ;;      Params:         0       0       0       0       0
   148 ;;      Locals:         0       0       0       0       0
   149 ;;      Temps:          0       0       0       0       0
   150 ;;      Totals:         0       0       0       0       0
   151 ;;Total ram usage:        0 bytes
   152 ;; Hardware stack levels required when called:    1
   153 ;; This function calls:
   154 ;;		Nothing
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159  000F                     _main:	
   160  000F  303C               	movlw	60
   161                           
   162                           ;timer.c: 18: GIE = 1;
   163                           
   164                           ; Regs used in _main: [wreg+status,2+status,0]
   165  0010  178B               	bsf	11,7
   166                           
   167                           ;timer.c: 19: PEIE = 1;
   168  0011  170B               	bsf	11,6
   169                           
   170                           ;timer.c: 20: TMR0IE =1;
   171  0012  168B               	bsf	11,5
   172                           
   173                           ;timer.c: 22: TMR0 = 60;
   174  0013  0081               	movwf	1	;volatile
   175                           
   176                           ;timer.c: 23: OPTION_REG = 0x07;
   177  0014  3007               	movlw	7
   178  0015  1683               	bsf	3,5	;RP0=1, select bank1
   179  0016  0081               	movwf	1	;volatile
   180                           
   181                           ;timer.c: 25: TRISB = 0x00;
   182  0017  0186               	clrf	6	;volatile
   183  0018                     l1756:	
   184                           
   185                           ;timer.c: 28: {
   186                           ;timer.c: 29: if(i == 0)
   187  0018  08F2               	movf	_i,f
   188                           
   189                           ;timer.c: 30: {
   190                           ;timer.c: 31: RB0 = 1;
   191  0019  1283               	bcf	3,5	;RP0=0, select bank0
   192  001A  1903               	btfsc	3,2
   193  001B  1406               	bsf	6,0
   194                           
   195                           ;timer.c: 32: }
   196                           ;timer.c: 33: if (i == 100)
   197  001C  0872               	movf	_i,w
   198  001D  3A64               	xorlw	100
   199                           
   200                           ;timer.c: 34: {
   201                           ;timer.c: 35: RB0 = 0;
   202  001E  1283               	bcf	3,5	;RP0=0, select bank0
   203  001F  1903               	btfsc	3,2
   204  0020  1006               	bcf	6,0
   205                           
   206                           ;timer.c: 36: }
   207                           ;timer.c: 37: if(i == 200)
   208  0021  0872               	movf	_i,w
   209  0022  3AC8               	xorlw	200
   210  0023  1D03               	skipz
   211  0024  2818               	goto	l1756
   212                           
   213                           ;timer.c: 38: {
   214                           ;timer.c: 39: i=0;
   215  0025  01F2               	clrf	_i
   216  0026  2818               	goto	l1756
   217  0027                     __end_of_main:	
   218                           
   219                           	psect	cinit
   220  0032                     start_initialization:	
   221                           
   222                           ; Clear objects allocated to COMMON
   223  0032  01F2               	clrf	__pbssCOMMON& (0+127)
   224  0033                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  0033  0183               	clrf	3
   228  0034  120A  118A  280F   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMMON
   231  0072                     __pbssCOMMON:	
   232  0072                     _i:	
   233  0072                     	ds	1
   234                           
   235                           	psect	cstackCOMMON
   236  0070                     __pcstackCOMMON:	
   237  0070                     ?_timer:	
   238  0070                     ??_timer:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 0 bytes @ 0x0
   243                           
   244                           
   245                           ; 0 bytes @ 0x0
   246  0070                     	ds	2
   247  0072                     ??_main:	
   248                           
   249                           	psect	text20
   250  0027                     __ptext20:	
   251 ;; =============== function _main ends ============
   252                           
   253                           
   254 ;; *************** function _timer *****************
   255 ;; Defined at:
   256 ;;		line 8 in file "D:\pic_youtube_tutorials\timer.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;		None               void
   263 ;; Registers used:
   264 ;;		status,2, status,0
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: FFFFF/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0
   273 ;;      Totals:         2       0       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		Interrupt level 1
   280 ;; This function uses a non-reentrant model
   281 ;;
   282  0027                     _timer:	
   283                           
   284                           ;timer.c: 9: if(TMR0IF == 1)
   285  0027  1D0B               	btfss	11,2
   286  0028  282B               	goto	i1l688
   287                           
   288                           ;timer.c: 10: {
   289                           ;timer.c: 11: i++;
   290  0029  0AF2               	incf	_i,f
   291                           
   292                           ;timer.c: 12: TMR0IF = 0;
   293  002A  110B               	bcf	11,2
   294  002B                     i1l688:	
   295  002B  0871               	movf	??_timer+1,w
   296  002C  008A               	movwf	10
   297  002D  0E70               	swapf	??_timer^(0+-128),w
   298  002E  0083               	movwf	3
   299  002F  0EFE               	swapf	126,f
   300  0030  0E7E               	swapf	126,w
   301  0031  0009               	retfie
   302  0032                     __end_of_timer:	
   303                           
   304                           	psect	intentry
   305  0004                     __pintentry:	
   306                           ; Regs used in _timer: [status]
   307                           
   308  0004                     interrupt_function:	
   309  007E                     saved_w	set	btemp
   310  0004  00FE               	movwf	btemp
   311  0005  0E03               	swapf	3,w
   312  0006  00F0               	movwf	??_timer
   313  0007  080A               	movf	10,w
   314  0008  00F1               	movwf	??_timer+1
   315  0009  120A  118A  2827   	ljmp	_timer
   316                           
   317                           	psect	text21
   318  0000                     __ptext21:	
   319 ;; =============== function _timer ends ============
   320                           
   321  007E                     btemp	set	126	;btemp
   322  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jun 15 19:27:38 2022

                   _i 0072                   _GIE 005F                   _RB0 0030                  l1750 0000  
                l1752 0000                  l1754 0000                  l1756 0018                  _PEIE 005E  
                _TMR0 0001                  _main 000F                  btemp 007E                  start 000C  
               ?_main 0070                 i1l688 002B                 _TRISB 0086                 _timer 0027  
               pclath 000A                 status 0003                 wtemp0 007E          __end_of_main 0027  
              ??_main 0072                ?_timer 0070                i1l1744 0000                i1l1748 0000  
              _TMR0IE 005D                _TMR0IF 005A                saved_w 007E        __pcstackCOMMON 0070  
       __end_of_timer 0032               ??_timer 0070            __pmaintext 000F            __pintentry 0004  
end_of_initialization 0033   start_initialization 0032           __pbssCOMMON 0072        __size_of_timer 000B  
   interrupt_function 0004              __ptext20 0027              __ptext21 0000         __size_of_main 0018  
            intlevel1 0000            _OPTION_REG 0081  
