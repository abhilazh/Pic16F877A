

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Jun 15 10:54:32 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text192,local,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	text193,local,class=CODE,delta=2
    12                           	psect	text194,local,class=CODE,delta=2
    13                           	psect	text197,local,class=CODE,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text201,local,class=CODE,delta=2
    16                           	psect	pa_nodes,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  000A                     	;#
    19                           
    20                           	psect	config
    21  2007  3F7A               	dw	16250	;#
    22                           
    23                           	psect	text192
    24  0000                     __ptext192:	
    25  0007                     _PORTC	set	7
    26  005F                     _GIE	set	95
    27  005C                     _INTE	set	92
    28  0059                     _INTF	set	89
    29  005E                     _PEIE	set	94
    30  0040                     _RD0	set	64
    31  0041                     _RD1	set	65
    32  0042                     _RD2	set	66
    33  0087                     _TRISC	set	135
    34  0088                     _TRISD	set	136
    35  040E                     _INTEDG	set	1038
    36                           
    37                           	psect	strings
    38  00B7                     __pstrings:	
    39  00B7                     stringtab:	
    40                           ;	global	stringdir,stringtab,__stringbase
    41                           
    42  00B7                     stringcode:	
    43                           ;	String table - string pointers are 1 byte each
    44                           
    45  00B7                     stringdir:	
    46  00B7  3000               	movlw	high stringdir
    47  00B8  008A               	movwf	10
    48  00B9  0804               	movf	4,w
    49  00BA  0A84               	incf	4,f
    50  00BB  0782               	addwf	2,f
    51  00BC                     __stringbase:	
    52  00BC  3400               	retlw	0
    53  00BD                     STR_1:	
    54  00BD  3469               	retlw	105	;'i'
    55  00BE  346E               	retlw	110	;'n'
    56  00BF  3474               	retlw	116	;'t'
    57  00C0  3465               	retlw	101	;'e'
    58  00C1  3472               	retlw	114	;'r'
    59  00C2  3472               	retlw	114	;'r'
    60  00C3  3475               	retlw	117	;'u'
    61  00C4  3470               	retlw	112	;'p'
    62  00C5  3474               	retlw	116	;'t'
    63  00C6  3465               	retlw	101	;'e'
    64  00C7  3464               	retlw	100	;'d'
    65  00C8  3400               	retlw	0
    66  00C9                     STR_2:	
    67  00C9  3445               	retlw	69	;'E'
    68  00CA  346D               	retlw	109	;'m'
    69  00CB  3462               	retlw	98	;'b'
    70  00CC  3465               	retlw	101	;'e'
    71  00CD  3464               	retlw	100	;'d'
    72  00CE  3464               	retlw	100	;'d'
    73  00CF  3465               	retlw	101	;'e'
    74  00D0  3464               	retlw	100	;'d'
    75  00D1  3400               	retlw	0
    76  00D2                     STR_3:	
    77  00D2  3453               	retlw	83	;'S'
    78  00D3  3479               	retlw	121	;'y'
    79  00D4  3473               	retlw	115	;'s'
    80  00D5  3474               	retlw	116	;'t'
    81  00D6  3465               	retlw	101	;'e'
    82  00D7  346D               	retlw	109	;'m'
    83  00D8  3473               	retlw	115	;'s'
    84  00D9  3400               	retlw	0
    85                           
    86                           	psect	cinit
    87  00FC                     start_initialization:	
    88  00FC                     end_of_initialization:	
    89                           ;End of C runtime variable initialization code
    90                           
    91  00FC  0183               	clrf	3
    92  00FD  120A  118A  2868   	ljmp	_main	;jump to C main() function
    93                           
    94                           	psect	cstackCOMMON
    95  0070                     __pcstackCOMMON:	
    96  0070                     ?_lcd_data:	
    97  0070                     ?_lcd_command:	
    98                           ; 0 bytes @ 0x0
    99                           
   100  0070                     ?_lcd_init:	
   101                           ; 0 bytes @ 0x0
   102                           
   103  0070                     ?_button:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0070                     ?_main:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?i1_lcd_data:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ??i1_lcd_data:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?i1_lcd_command:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ??i1_lcd_command:	
   119                           ; 0 bytes @ 0x0
   120                           
   121                           
   122                           ; 0 bytes @ 0x0
   123  0070                     	ds	2
   124  0072                     i1lcd_data@data:	
   125  0072                     i1lcd_command@command:	
   126                           ; 1 bytes @ 0x2
   127                           
   128                           
   129                           ; 1 bytes @ 0x2
   130  0072                     	ds	1
   131  0073                     ?i1_lcd_string:	
   132  0073                     i1lcd_string@string_length:	
   133                           ; 0 bytes @ 0x3
   134                           
   135                           
   136                           ; 1 bytes @ 0x3
   137  0073                     	ds	1
   138  0074                     ??i1_lcd_string:	
   139  0074                     i1lcd_string@string:	
   140                           ; 0 bytes @ 0x4
   141                           
   142                           
   143                           ; 1 bytes @ 0x4
   144  0074                     	ds	1
   145  0075                     i1lcd_string@i:	
   146                           
   147                           ; 1 bytes @ 0x5
   148  0075                     	ds	1
   149  0076                     ??_button:	
   150                           
   151                           ; 0 bytes @ 0x6
   152  0076                     	ds	4
   153                           
   154                           	psect	cstackBANK0
   155  0020                     __pcstackBANK0:	
   156  0020                     ??_lcd_data:	
   157  0020                     ??_lcd_command:	
   158                           ; 0 bytes @ 0x0
   159                           
   160                           
   161                           ; 0 bytes @ 0x0
   162  0020                     	ds	2
   163  0022                     lcd_data@data:	
   164  0022                     lcd_command@command:	
   165                           ; 1 bytes @ 0x2
   166                           
   167                           
   168                           ; 1 bytes @ 0x2
   169  0022                     	ds	1
   170  0023                     ?_lcd_string:	
   171  0023                     ??_lcd_init:	
   172                           ; 0 bytes @ 0x3
   173                           
   174  0023                     lcd_string@string_length:	
   175                           ; 0 bytes @ 0x3
   176                           
   177                           
   178                           ; 1 bytes @ 0x3
   179  0023                     	ds	1
   180  0024                     ??_lcd_string:	
   181  0024                     lcd_string@string:	
   182                           ; 0 bytes @ 0x4
   183                           
   184                           
   185                           ; 1 bytes @ 0x4
   186  0024                     	ds	1
   187  0025                     lcd_string@i:	
   188                           
   189                           ; 1 bytes @ 0x5
   190  0025                     	ds	1
   191  0026                     ??_main:	
   192                           
   193                           	psect	maintext
   194  0068                     __pmaintext:	
   195                           ; 0 bytes @ 0x6
   196 ;;Data sizes: Strings 29, constant 0, data 0, bss 0, persistent 0 stack 0
   197 ;;Auto spaces:   Size  Autos    Used
   198 ;; COMMON          14     10      10
   199 ;; BANK0           80      6       6
   200 ;; BANK1           80      0       0
   201 ;; BANK3           96      0       0
   202 ;; BANK2           96      0       0
   203 ;;
   204 ;; Pointer list with targets:
   205 ;; i1lcd_string@string	PTR const unsigned char  size(1) Largest target is 12
   206 ;;		 -> STR_1(CODE[12]), 
   207 ;;
   208 ;; lcd_string@string	PTR const unsigned char  size(1) Largest target is 12
   209 ;;		 -> STR_3(CODE[8]), STR_2(CODE[9]), STR_1(CODE[12]), 
   210 ;;
   211 ;;
   212 ;; Critical Paths under _main in COMMON
   213 ;;
   214 ;;   None.
   215 ;;
   216 ;; Critical Paths under _button in COMMON
   217 ;;
   218 ;;   _button->i1_lcd_string
   219 ;;   i1_lcd_string->i1_lcd_data
   220 ;;
   221 ;; Critical Paths under _main in BANK0
   222 ;;
   223 ;;   _main->_lcd_string
   224 ;;   _lcd_init->_lcd_command
   225 ;;   _lcd_string->_lcd_data
   226 ;;
   227 ;; Critical Paths under _button in BANK0
   228 ;;
   229 ;;   None.
   230 ;;
   231 ;; Critical Paths under _main in BANK1
   232 ;;
   233 ;;   None.
   234 ;;
   235 ;; Critical Paths under _button in BANK1
   236 ;;
   237 ;;   None.
   238 ;;
   239 ;; Critical Paths under _main in BANK3
   240 ;;
   241 ;;   None.
   242 ;;
   243 ;; Critical Paths under _button in BANK3
   244 ;;
   245 ;;   None.
   246 ;;
   247 ;; Critical Paths under _main in BANK2
   248 ;;
   249 ;;   None.
   250 ;;
   251 ;; Critical Paths under _button in BANK2
   252 ;;
   253 ;;   None.
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;;
   258 ;;Call Graph Tables:
   259 ;;
   260 ;; ---------------------------------------------------------------------------------
   261 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   262 ;; ---------------------------------------------------------------------------------
   263 ;; (0) _main                                                 0     0      0     156
   264 ;;                           _lcd_init
   265 ;;                        _lcd_command
   266 ;;                         _lcd_string
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (1) _lcd_init                                             0     0      0      22
   269 ;;                        _lcd_command
   270 ;; ---------------------------------------------------------------------------------
   271 ;; (1) _lcd_string                                           3     2      1     112
   272 ;;                                              3 BANK0      3     2      1
   273 ;;                           _lcd_data
   274 ;; ---------------------------------------------------------------------------------
   275 ;; (1) _lcd_command                                          3     3      0      22
   276 ;;                                              0 BANK0      3     3      0
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (2) _lcd_data                                             3     3      0      22
   279 ;;                                              0 BANK0      3     3      0
   280 ;; ---------------------------------------------------------------------------------
   281 ;; Estimated maximum stack depth 2
   282 ;; ---------------------------------------------------------------------------------
   283 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   284 ;; ---------------------------------------------------------------------------------
   285 ;; (3) _button                                               4     4      0     442
   286 ;;                                              6 COMMON     4     4      0
   287 ;;                      i1_lcd_command
   288 ;;                       i1_lcd_string
   289 ;; ---------------------------------------------------------------------------------
   290 ;; (4) i1_lcd_string                                         3     2      1     369
   291 ;;                                              3 COMMON     3     2      1
   292 ;;                         i1_lcd_data
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (4) i1_lcd_command                                        3     3      0      73
   295 ;;                                              0 COMMON     3     3      0
   296 ;; ---------------------------------------------------------------------------------
   297 ;; (5) i1_lcd_data                                           3     3      0      73
   298 ;;                                              0 COMMON     3     3      0
   299 ;; ---------------------------------------------------------------------------------
   300 ;; Estimated maximum stack depth 5
   301 ;; ---------------------------------------------------------------------------------
   302 ;; Call Graph Graphs:
   303 ;; _main (ROOT)
   304 ;;   _lcd_init
   305 ;;     _lcd_command
   306 ;;   _lcd_command
   307 ;;   _lcd_string
   308 ;;     _lcd_data
   309 ;;
   310 ;; _button (ROOT)
   311 ;;   i1_lcd_command
   312 ;;   i1_lcd_string
   313 ;;     i1_lcd_data
   314 ;;
   315 ;; Address spaces:
   316 ;;Name               Size   Autos  Total    Cost      Usage
   317 ;;BITCOMMON            E      0       0       0        0.0%
   318 ;;EEDATA             100      0       0       0        0.0%
   319 ;;NULL                 0      0       0       0        0.0%
   320 ;;CODE                 0      0       0       0        0.0%
   321 ;;COMMON               E      A       A       1       71.4%
   322 ;;BITSFR0              0      0       0       1        0.0%
   323 ;;SFR0                 0      0       0       1        0.0%
   324 ;;BITSFR1              0      0       0       2        0.0%
   325 ;;SFR1                 0      0       0       2        0.0%
   326 ;;STACK                0      0       8       2        0.0%
   327 ;;ABS                  0      0       0       3        0.0%
   328 ;;BITBANK0            50      0       0       4        0.0%
   329 ;;BITSFR3              0      0       0       4        0.0%
   330 ;;SFR3                 0      0       0       4        0.0%
   331 ;;BANK0               50      6       6       5        7.5%
   332 ;;BITSFR2              0      0       0       5        0.0%
   333 ;;SFR2                 0      0       0       5        0.0%
   334 ;;BITBANK1            50      0       0       6        0.0%
   335 ;;BANK1               50      0       0       7        0.0%
   336 ;;BITBANK3            60      0       0       8        0.0%
   337 ;;BANK3               60      0       0       9        0.0%
   338 ;;BITBANK2            60      0       0      10        0.0%
   339 ;;BANK2               60      0       0      11        0.0%
   340 ;;DATA                 0      0       0      12        0.0%
   341                           
   342                           
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 57 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;		None               void
   352 ;; Registers used:
   353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 17F/0
   356 ;;		On exit  : 60/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels required when called:    5
   365 ;; This function calls:
   366 ;;		_lcd_init
   367 ;;		_lcd_command
   368 ;;		_lcd_string
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373  0068                     _main:	
   374                           
   375                           ;lcd_interrupt.c: 58: TRISC = 0x00;
   376                           
   377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   378  0068  1683               	bsf	3,5	;RP0=1, select bank1
   379  0069  0187               	clrf	7	;volatile
   380                           
   381                           ;lcd_interrupt.c: 59: TRISD = 0x00;
   382  006A  0188               	clrf	8	;volatile
   383                           
   384                           ;lcd_interrupt.c: 60: GIE = 1;
   385  006B  178B               	bsf	11,7
   386                           
   387                           ;lcd_interrupt.c: 61: PEIE = 1;
   388  006C  170B               	bsf	11,6
   389                           
   390                           ;lcd_interrupt.c: 62: INTE = 1;
   391  006D  160B               	bsf	11,4
   392                           
   393                           ;lcd_interrupt.c: 63: INTEDG = 1;
   394  006E  1701               	bsf	1,6
   395                           
   396                           ;lcd_interrupt.c: 64: lcd_init();
   397  006F  120A  118A  20DA   	fcall	_lcd_init
      +       120A  118A         
   398  0074                     l1946:	
   399                           
   400                           ;lcd_interrupt.c: 66: {
   401                           ;lcd_interrupt.c: 67: lcd_command(0x83);
   402  0074  3083               	movlw	131
   403  0075  120A  118A  20E8   	fcall	_lcd_command
      +       120A  118A         
   404                           
   405                           ;lcd_interrupt.c: 68: lcd_string("Embedded",8);
   406  007A  3008               	movlw	8
   407  007B  00A3               	movwf	?_lcd_string
   408  007C  300D               	movlw	(STR_2-__stringbase)& (0+255)
   409  007D  120A  118A  2091   	fcall	_lcd_string
      +       120A  118A         
   410                           
   411                           ;lcd_interrupt.c: 69: lcd_command(0xC3);
   412  0082  30C3               	movlw	195
   413  0083  120A  118A  20E8   	fcall	_lcd_command
      +       120A  118A         
   414                           
   415                           ;lcd_interrupt.c: 70: lcd_string("Systems",7);
   416  0088  3007               	movlw	7
   417  0089  00A3               	movwf	?_lcd_string
   418  008A  3016               	movlw	(STR_3-__stringbase)& (0+255)
   419  008B  120A  118A  2091   	fcall	_lcd_string
      +       120A  118A         
   420  0090  2874               	goto	l1946
   421  0091                     __end_of_main:	
   422                           
   423                           	psect	text193
   424  00DA                     __ptext193:	
   425 ;; =============== function _main ends ============
   426                           
   427                           
   428 ;; *************** function _lcd_init *****************
   429 ;; Defined at:
   430 ;;		line 38 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;		None               void
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 17F/20
   441 ;;		On exit  : 60/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    4
   451 ;; This function calls:
   452 ;;		_lcd_command
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457  00DA                     _lcd_init:	
   458                           
   459                           ;lcd_interrupt.c: 39: lcd_command(0x38);
   460                           
   461                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   462  00DA  3038               	movlw	56
   463  00DB  20E8  120A  118A   	fcall	_lcd_command
   464                           
   465                           ;lcd_interrupt.c: 40: lcd_command(0x06);
   466  00DE  3006               	movlw	6
   467  00DF  20E8  120A  118A   	fcall	_lcd_command
   468                           
   469                           ;lcd_interrupt.c: 41: lcd_command(0x0C);
   470  00E2  300C               	movlw	12
   471  00E3  20E8  120A  118A   	fcall	_lcd_command
   472                           
   473                           ;lcd_interrupt.c: 42: lcd_command(0x01);
   474  00E6  3001               	movlw	1
   475  00E7  28E8               	ljmp	_lcd_command
   476  00E8                     __end_of_lcd_init:	
   477  00E8                     __ptext195:	
   478 ;; =============== function _lcd_string ends ============
   479                           
   480                           
   481 ;; *************** function _lcd_command *****************
   482 ;; Defined at:
   483 ;;		line 20 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  command         1    wreg     unsigned char 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  command         1    2[BANK0 ] unsigned char 
   488 ;; Return value:  Size  Location     Type
   489 ;;		None               void
   490 ;; Registers used:
   491 ;;		wreg
   492 ;; Tracked objects:
   493 ;;		On entry : 40/0
   494 ;;		On exit  : 60/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       1       0       0       0
   499 ;;      Temps:          0       2       0       0       0
   500 ;;      Totals:         0       3       0       0       0
   501 ;;Total ram usage:        3 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_lcd_init
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511  00E8                     _lcd_command:	
   512                           
   513                           ; Regs used in _lcd_command: [wreg]
   514                           ;lcd_command@command stored from wreg
   515  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   516  00E9  00A2               	movwf	lcd_command@command
   517                           
   518                           ;lcd_interrupt.c: 21: PORTC = command;
   519  00EA  0822               	movf	lcd_command@command,w
   520  00EB  0087               	movwf	7	;volatile
   521  00EC  301A               	movlw	26
   522                           
   523                           ;lcd_interrupt.c: 22: RD0 = 0;
   524  00ED  1008               	bcf	8,0
   525                           
   526                           ;lcd_interrupt.c: 23: RD1 =0;
   527  00EE  1088               	bcf	8,1
   528  00EF  1508               	bsf	8,2
   529                           
   530                           ;lcd_interrupt.c: 25: _delay((unsigned long)((5)*(16000000/4000.0)));
   531  00F0  00A1               	movwf	??_lcd_command+1
   532  00F1  30F8               	movlw	248
   533  00F2  00A0               	movwf	??_lcd_command
   534  00F3                     u87:	
   535  00F3  0BA0               	decfsz	??_lcd_command,f
   536  00F4  28F3               	goto	u87
   537  00F5  0BA1               	decfsz	??_lcd_command+1,f
   538  00F6  28F3               	goto	u87
   539  00F7  0064               	clrwdt
   540                           
   541                           ;lcd_interrupt.c: 26: RD2 = 0;
   542  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   543  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   544  00FA  1108               	bcf	8,2
   545  00FB  0008               	return
   546  00FC                     __end_of_lcd_command:	
   547                           
   548                           	psect	text194
   549  0091                     __ptext194:	
   550 ;; =============== function _lcd_init ends ============
   551                           
   552                           
   553 ;; *************** function _lcd_string *****************
   554 ;; Defined at:
   555 ;;		line 30 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  string          1    wreg     PTR const unsigned char 
   558 ;;		 -> STR_3(8), STR_2(9), STR_1(12), 
   559 ;;  string_lengt    1    3[BANK0 ] unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  string          1    4[BANK0 ] PTR const unsigned char 
   562 ;;		 -> STR_3(8), STR_2(9), STR_1(12), 
   563 ;;  i               1    5[BANK0 ] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;		None               void
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 60/0
   570 ;;		On exit  : 60/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       1       0       0       0
   574 ;;      Locals:         0       2       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         0       3       0       0       0
   577 ;;Total ram usage:        3 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    4
   580 ;; This function calls:
   581 ;;		_lcd_data
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586  0091                     _lcd_string:	
   587                           
   588                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   589                           ;lcd_string@string stored from wreg
   590  0091  00A4               	movwf	lcd_string@string
   591                           
   592                           ;lcd_interrupt.c: 31: unsigned char i;
   593                           ;lcd_interrupt.c: 32: for(i =0; i<string_length; i++)
   594  0092  01A5               	clrf	lcd_string@i
   595  0093                     l1930:	
   596  0093  0823               	movf	lcd_string@string_length,w
   597  0094  0225               	subwf	lcd_string@i,w
   598  0095  1803               	btfsc	3,0
   599  0096  0008               	return
   600                           
   601                           ;lcd_interrupt.c: 33: {
   602                           ;lcd_interrupt.c: 34: lcd_data(string[i]);
   603  0097  0825               	movf	lcd_string@i,w
   604  0098  0724               	addwf	lcd_string@string,w
   605  0099  0084               	movwf	4
   606  009A  120A  118A  20B7   	fcall	stringdir
      +       120A  118A         
   607  009F  20A4  120A  118A   	fcall	_lcd_data
   608  00A2  0AA5               	incf	lcd_string@i,f
   609  00A3  2893               	goto	l1930
   610  00A4                     __end_of_lcd_string:	
   611  00A4                     __ptext196:	
   612 ;; =============== function _lcd_command ends ============
   613                           
   614                           
   615 ;; *************** function _lcd_data *****************
   616 ;; Defined at:
   617 ;;		line 11 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  data            1    wreg     unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  data            1    2[BANK0 ] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;		None               void
   624 ;; Registers used:
   625 ;;		wreg
   626 ;; Tracked objects:
   627 ;;		On entry : 60/0
   628 ;;		On exit  : 60/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       1       0       0       0
   633 ;;      Temps:          0       2       0       0       0
   634 ;;      Totals:         0       3       0       0       0
   635 ;;Total ram usage:        3 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    3
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_lcd_string
   642 ;; This function uses a non-reentrant model
   643 ;;
   644  00A4                     _lcd_data:	
   645                           
   646                           ; Regs used in _lcd_data: [wreg]
   647                           ;lcd_data@data stored from wreg
   648  00A4  00A2               	movwf	lcd_data@data
   649                           
   650                           ;lcd_interrupt.c: 12: PORTC = data;
   651  00A5  0822               	movf	lcd_data@data,w
   652  00A6  0087               	movwf	7	;volatile
   653  00A7  301A               	movlw	26
   654                           
   655                           ;lcd_interrupt.c: 13: RD0 = 1;
   656  00A8  1408               	bsf	8,0
   657                           
   658                           ;lcd_interrupt.c: 14: RD1 =0;
   659  00A9  1088               	bcf	8,1
   660  00AA  1508               	bsf	8,2
   661                           
   662                           ;lcd_interrupt.c: 16: _delay((unsigned long)((5)*(16000000/4000.0)));
   663  00AB  00A1               	movwf	??_lcd_data+1
   664  00AC  30F8               	movlw	248
   665  00AD  00A0               	movwf	??_lcd_data
   666  00AE                     u97:	
   667  00AE  0BA0               	decfsz	??_lcd_data,f
   668  00AF  28AE               	goto	u97
   669  00B0  0BA1               	decfsz	??_lcd_data+1,f
   670  00B1  28AE               	goto	u97
   671  00B2  0064               	clrwdt
   672                           
   673                           ;lcd_interrupt.c: 17: RD2 = 0;
   674  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   675  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   676  00B5  1108               	bcf	8,2
   677  00B6  0008               	return
   678  00B7                     __end_of_lcd_data:	
   679                           
   680                           	psect	text197
   681  0015                     __ptext197:	
   682 ;; =============== function _lcd_data ends ============
   683                           
   684                           
   685 ;; *************** function _button *****************
   686 ;; Defined at:
   687 ;;		line 47 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 60/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          4       0       0       0       0
   704 ;;      Totals:         4       0       0       0       0
   705 ;;Total ram usage:        4 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    2
   708 ;; This function calls:
   709 ;;		i1_lcd_command
   710 ;;		i1_lcd_string
   711 ;; This function is called by:
   712 ;;		Interrupt level 1
   713 ;; This function uses a non-reentrant model
   714 ;;
   715  0015                     _button:	
   716                           
   717                           ;lcd_interrupt.c: 48: if(INTF == 1)
   718  0015  1C8B               	btfss	11,1
   719  0016  2824               	goto	i1l703
   720                           
   721                           ;lcd_interrupt.c: 49: {
   722                           ;lcd_interrupt.c: 50: lcd_command(0x01);
   723  0017  3001               	movlw	1
   724  0018  202F  120A  118A   	fcall	i1_lcd_command
   725                           
   726                           ;lcd_interrupt.c: 51: lcd_command(0x83);
   727  001B  3083               	movlw	131
   728  001C  202F  120A  118A   	fcall	i1_lcd_command
   729                           
   730                           ;lcd_interrupt.c: 52: lcd_string("interrupted",11);
   731  001F  300B               	movlw	11
   732  0020  00F3               	movwf	?i1_lcd_string
   733  0021  3001               	movlw	(STR_1-__stringbase)& (0+255)
   734  0022  2042               	fcall	i1_lcd_string
   735                           
   736                           ;lcd_interrupt.c: 53: INTF = 0;
   737  0023  108B               	bcf	11,1
   738  0024                     i1l703:	
   739  0024  0879               	movf	??_button+3,w
   740  0025  00FF               	movwf	127
   741  0026  0878               	movf	??_button+2,w
   742  0027  008A               	movwf	10
   743  0028  0877               	movf	??_button+1,w
   744  0029  0084               	movwf	4
   745  002A  0E76               	swapf	??_button^(0+-128),w
   746  002B  0083               	movwf	3
   747  002C  0EFE               	swapf	126,f
   748  002D  0E7E               	swapf	126,w
   749  002E  0009               	retfie
   750  002F                     __end_of_button:	
   751  002F                     __ptext199:	
   752 ;; =============== function i1_lcd_string ends ============
   753                           
   754                           
   755 ;; *************** function i1_lcd_command *****************
   756 ;; Defined at:
   757 ;;		line 20 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  lcd_command     1    wreg     unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  lcd_command     1    2[COMMON] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg
   766 ;; Tracked objects:
   767 ;;		On entry : 60/0
   768 ;;		On exit  : 60/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0
   774 ;;      Totals:         3       0       0       0       0
   775 ;;Total ram usage:        3 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_button
   781 ;; This function uses a non-reentrant model
   782 ;;
   783  002F                     i1_lcd_command:	
   784                           
   785                           ; Regs used in i1_lcd_command: [wreg]
   786                           ;i1lcd_command@command stored from wreg
   787  002F  00F2               	movwf	i1lcd_command@command
   788                           
   789                           ;lcd_interrupt.c: 21: PORTC = command;
   790  0030  0872               	movf	i1lcd_command@command,w
   791  0031  0087               	movwf	7	;volatile
   792  0032  301A               	movlw	26
   793                           
   794                           ;lcd_interrupt.c: 22: RD0 = 0;
   795  0033  1008               	bcf	8,0
   796                           
   797                           ;lcd_interrupt.c: 23: RD1 =0;
   798  0034  1088               	bcf	8,1
   799  0035  1508               	bsf	8,2
   800                           
   801                           ;lcd_interrupt.c: 25: _delay((unsigned long)((5)*(16000000/4000.0)));
   802  0036  00F1               	movwf	??i1_lcd_command+1
   803  0037  30F8               	movlw	248
   804  0038  00F0               	movwf	??i1_lcd_command
   805  0039                     u10_27:	
   806  0039  0BF0               	decfsz	??i1_lcd_command,f
   807  003A  2839               	goto	u10_27
   808  003B  0BF1               	decfsz	??i1_lcd_command+1,f
   809  003C  2839               	goto	u10_27
   810  003D  0064               	clrwdt
   811                           
   812                           ;lcd_interrupt.c: 26: RD2 = 0;
   813  003E  1283               	bcf	3,5	;RP0=0, select bank0
   814  003F  1303               	bcf	3,6	;RP1=0, select bank0
   815  0040  1108               	bcf	8,2
   816  0041  0008               	return
   817  0042                     __end_ofi1_lcd_command:	
   818  0042                     __ptext198:	
   819 ;; =============== function _button ends ============
   820                           
   821                           
   822 ;; *************** function i1_lcd_string *****************
   823 ;; Defined at:
   824 ;;		line 30 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  lcd_string      1    wreg     PTR const unsigned char 
   827 ;;		 -> STR_1(12), 
   828 ;;  lcd_string      1    3[COMMON] unsigned char 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  lcd_string      1    4[COMMON] PTR const unsigned char 
   831 ;;		 -> STR_1(12), 
   832 ;;  lcd_string      1    5[COMMON] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;		None               void
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 60/0
   839 ;;		On exit  : 60/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         1       0       0       0       0
   843 ;;      Locals:         2       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         3       0       0       0       0
   846 ;;Total ram usage:        3 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    1
   849 ;; This function calls:
   850 ;;		i1_lcd_data
   851 ;; This function is called by:
   852 ;;		_button
   853 ;; This function uses a non-reentrant model
   854 ;;
   855  0042                     i1_lcd_string:	
   856                           
   857                           ; Regs used in i1_lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   858                           ;i1lcd_string@string stored from wreg
   859  0042  00F4               	movwf	i1lcd_string@string
   860                           
   861                           ;lcd_interrupt.c: 31: unsigned char i;
   862                           ;lcd_interrupt.c: 32: for(i =0; i<string_length; i++)
   863  0043  01F5               	clrf	i1lcd_string@i
   864  0044                     i1l1902:	
   865  0044  0873               	movf	i1lcd_string@string_length,w
   866  0045  0275               	subwf	i1lcd_string@i,w
   867  0046  1803               	btfsc	3,0
   868  0047  0008               	return
   869                           
   870                           ;lcd_interrupt.c: 33: {
   871                           ;lcd_interrupt.c: 34: lcd_data(string[i]);
   872  0048  0875               	movf	i1lcd_string@i,w
   873  0049  0774               	addwf	i1lcd_string@string,w
   874  004A  0084               	movwf	4
   875  004B  120A  118A  20B7   	fcall	stringdir
      +       120A  118A         
   876  0050  2055  120A  118A   	fcall	i1_lcd_data
   877  0053  0AF5               	incf	i1lcd_string@i,f
   878  0054  2844               	goto	i1l1902
   879  0055                     __end_ofi1_lcd_string:	
   880  0055                     __ptext200:	
   881 ;; =============== function i1_lcd_command ends ============
   882                           
   883                           
   884 ;; *************** function i1_lcd_data *****************
   885 ;; Defined at:
   886 ;;		line 11 in file "D:\pic_youtube_tutorials\lcd_interrupt.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  lcd_data        1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  lcd_data        1    2[COMMON] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;		None               void
   893 ;; Registers used:
   894 ;;		wreg
   895 ;; Tracked objects:
   896 ;;		On entry : 60/0
   897 ;;		On exit  : 60/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0
   902 ;;      Temps:          2       0       0       0       0
   903 ;;      Totals:         3       0       0       0       0
   904 ;;Total ram usage:        3 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		i1_lcd_string
   910 ;; This function uses a non-reentrant model
   911 ;;
   912  0055                     i1_lcd_data:	
   913                           
   914                           ; Regs used in i1_lcd_data: [wreg]
   915                           ;i1lcd_data@data stored from wreg
   916  0055  00F2               	movwf	i1lcd_data@data
   917                           
   918                           ;lcd_interrupt.c: 12: PORTC = data;
   919  0056  0872               	movf	i1lcd_data@data,w
   920  0057  0087               	movwf	7	;volatile
   921  0058  301A               	movlw	26
   922                           
   923                           ;lcd_interrupt.c: 13: RD0 = 1;
   924  0059  1408               	bsf	8,0
   925                           
   926                           ;lcd_interrupt.c: 14: RD1 =0;
   927  005A  1088               	bcf	8,1
   928  005B  1508               	bsf	8,2
   929                           
   930                           ;lcd_interrupt.c: 16: _delay((unsigned long)((5)*(16000000/4000.0)));
   931  005C  00F1               	movwf	??i1_lcd_data+1
   932  005D  30F8               	movlw	248
   933  005E  00F0               	movwf	??i1_lcd_data
   934  005F                     u11_27:	
   935  005F  0BF0               	decfsz	??i1_lcd_data,f
   936  0060  285F               	goto	u11_27
   937  0061  0BF1               	decfsz	??i1_lcd_data+1,f
   938  0062  285F               	goto	u11_27
   939  0063  0064               	clrwdt
   940                           
   941                           ;lcd_interrupt.c: 17: RD2 = 0;
   942  0064  1283               	bcf	3,5	;RP0=0, select bank0
   943  0065  1303               	bcf	3,6	;RP1=0, select bank0
   944  0066  1108               	bcf	8,2
   945  0067  0008               	return
   946  0068                     __end_ofi1_lcd_data:	
   947                           
   948                           	psect	intentry
   949  0004                     __pintentry:	
   950                           ; Regs used in _button: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   951                           
   952  0004                     interrupt_function:	
   953  007E                     saved_w	set	btemp
   954  0004  00FE               	movwf	btemp
   955  0005  0E03               	swapf	3,w
   956  0006  00F6               	movwf	??_button
   957  0007  0804               	movf	4,w
   958  0008  00F7               	movwf	??_button+1
   959  0009  080A               	movf	10,w
   960  000A  00F8               	movwf	??_button+2
   961  000B  1283               	bcf	3,5	;RP0=0, select bank0
   962  000C  1303               	bcf	3,6	;RP1=0, select bank0
   963  000D  087F               	movf	btemp+1,w
   964  000E  00F9               	movwf	??_button+3
   965  000F  120A  118A  2815   	ljmp	_button
   966                           
   967                           	psect	text201
   968  0000                     __ptext201:	
   969 ;; =============== function i1_lcd_data ends ============
   970                           
   971  007E                     btemp	set	126	;btemp
   972  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jun 15 10:54:32 2022

                        pc 0002               lcd_data@data 0022                         u87 00F3  
                       u97 00AE                         fsr 0004                        l690 0000  
                      l687 0000                        l696 0000                        l699 0000  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        fsr0 0004                 i1_lcd_data 0055  
                     l1910 0000                       l1912 0000                       l1904 0000  
                     l1920 0000                       l1906 0000                       l1922 0000  
                     l1914 0000                       l1930 0093                       l1908 0000  
                     l1916 0000                       l1924 0000                       l1932 0000  
                     l1940 0000                       l1918 0000                       l1950 0000  
                     l1942 0000                       l1934 0000                       l1928 0000  
                     l1952 0000                       l1944 0000                       l1936 0000  
                     l1946 0074                       l1938 0000                       l1948 0000  
                     STR_1 00BD                       STR_2 00C9                       STR_3 00D2  
                     _PEIE 005E                       _INTE 005C                       _INTF 0059  
                     _main 0068                       btemp 007E                       start 0012  
              lcd_string@i 0025             i1lcd_data@data 0072                      ?_main 0070  
                    i1l703 0024                      i1l690 0000                      i1l687 0000  
                    i1l696 0000                      u10_27 0039                      u11_27 005F  
                    _PORTC 0007      __size_ofi1_lcd_string 0013                      _TRISC 0087  
                    _TRISD 0088                      pclath 000A                      status 0003  
                    wtemp0 007E               __end_of_main 0091               i1_lcd_string 0042  
                   ??_main 0026     __size_ofi1_lcd_command 0013                ?i1_lcd_data 0070  
       i1lcd_string@string 0074                     i1l1900 0000                     i1l1902 0044  
                   i1l1880 0000                     i1l1872 0000                     i1l1882 0000  
                   i1l1890 0000                     i1l1874 0000                     i1l1884 0000  
                   i1l1876 0000                     i1l1892 0000                     i1l1868 0000  
                   i1l1878 0000                     i1l1894 0000                     i1l1886 0000  
                   i1l1888 0000                     i1l1896 0000                     _INTEDG 040E  
         __end_of_lcd_data 00B7           __end_of_lcd_init 00E8       __size_of_lcd_command 0014  
                   _button 0015                     saved_w 007E              i1_lcd_command 002F  
           __pcstackCOMMON 0070        __size_ofi1_lcd_data 0013       i1lcd_command@command 0072  
           ?i1_lcd_command 0070                 __pmaintext 0068                 __pintentry 0004  
                  ?_button 0070                  ?_lcd_data 0070                 _lcd_string 0091  
                ?_lcd_init 0070            __size_of_button 001A               ??i1_lcd_data 0070  
               ??_lcd_data 0020                 ??_lcd_init 0023       end_of_initialization 00FC  
          ??i1_lcd_command 0070         __end_ofi1_lcd_data 0068                ?_lcd_string 0023  
            ??_lcd_command 0020             __end_of_button 002F        start_initialization 00FC  
       lcd_command@command 0022              i1lcd_string@i 0075        __end_of_lcd_command 00FC  
      __size_of_lcd_string 0013                   ??_button 0076              __pcstackBANK0 0020  
        __size_of_lcd_data 0013          __size_of_lcd_init 000E                  __ptext200 0055  
                __ptext201 0000              ?i1_lcd_string 0073                  __ptext192 0000  
                __ptext193 00DA                  __ptext194 0091                  __ptext195 00E8  
                __ptext196 00A4                  __ptext197 0015                  __ptext198 0042  
                __ptext199 002F                  __pstrings 00B7          interrupt_function 0004  
              _lcd_command 00E8             ??i1_lcd_string 0074                __stringbase 00BC  
             ??_lcd_string 0024      __end_ofi1_lcd_command 0042         __end_of_lcd_string 00A4  
  lcd_string@string_length 0023                   _lcd_data 00A4                   _lcd_init 00DA  
            __size_of_main 0029  i1lcd_string@string_length 0073       __end_ofi1_lcd_string 0055  
                 intlevel1 0000                  stringcode 00B7                   stringdir 00B7  
                 stringtab 00B7           lcd_string@string 0024               ?_lcd_command 0070  
